{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Getting Started with Kubernetes",
  "Parameters": {
    "KubeCommunityAMI": {
      "Type": "String",
      "Description": "Kubernetes Community AMI",
      "AllowedPattern" : "ami-[a-f0-9]{8}"
    },
    "Nodes": {
      "Type": "Number",
      "Description": "Number of Kubernetes nodes",
      "Default": "3"
    },
    "NodeInstanceType": {
      "Type": "String",
      "Description": "EC2 instance type to use for Kubernetes nodes",
      "Default": "m4.xlarge"
    },
    "MasterInstanceType": {
      "Type": "String",
      "Description": "EC2 instance type to use for Kubernetes master (large instance type is recommended)",
      "Default": "m4.large"
    },
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the Kubernetes instances (if none appear in drop-down menu, you need to create one)",
      "MinLength": "1",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "NetworkAddon": {
      "Type": "String",
      "Description": "Select a pod Network addon to install",
      "AllowedValues": [
        "Weave",
        "NONE"
      ],
      "Default": "Weave"
    }
  },
  "Mappings": {
    "CurrentKubeCommunityAMIs": {
      "us-west-2": {
        "ImageId": "ami-847efbe4"
      }
    },
    "NetworkAddonOptions": {
      "Weave": {
        "configSet": "config-kubeadm-init-and-weave-network-addon"
      },
      "NONE": {
        "configSet": "config-kubeadm-init-only"
      }
    },
    "Subnets": {
      "VPC": {
        "CIDR": "172.31.0.0/16"
      },
      "AZ1": {
        "CIDR": "172.31.0.0/24"
      },
      "AZ2": {
        "CIDR": "172.31.1.0/24"
      }
    }
  },
  "Resources": {
    "KubernetesVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Fn::FindInMap": [
            "Subnets",
            "VPC",
            "CIDR"
          ]
        }
      }
    },
    "SubnetAZ1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "KubernetesVPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "Subnets",
            "AZ1",
            "CIDR"
          ]
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        }
      }
    },
    "SubnetAZ2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "KubernetesVPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "Subnets",
            "AZ2",
            "CIDR"
          ]
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        }
      }
    },
    "KubernetesIG": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "KubernetesVPC"
        },
        "InternetGatewayId": {
          "Ref": "KubernetesIG"
        }
      }
    },
    "RouteViaIG": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "KubernetesVPC"
        }
      }
    },
    "PublicRouteViaIG": {
      "DependsOn": "AttachGateway",
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteViaIG"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "KubernetesIG"
        }
      }
    },
    "RouteSubnetAZ1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "SubnetAZ1"
        },
        "RouteTableId": {
          "Ref": "RouteViaIG"
        }
      }
    },
    "RouteSubnetAZ2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "SubnetAZ2"
        },
        "RouteTableId": {
          "Ref": "RouteViaIG"
        }
      }
    },
    "KubernetesSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Kubernetes Allowed Ports",
        "VpcId": {
          "Ref": "KubernetesVPC"
        }
      }
    },
    "KubernetesIngressSSH": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "KubernetesSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "KubernetesIngressWeaveNetTCP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "KubernetesSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6783",
        "ToPort": "6783",
        "SourceSecurityGroupId": {
          "Ref": "KubernetesSG"
        }
      }
    },
    "KubernetesIngressWeaveNetUDP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "KubernetesSG"
        },
        "IpProtocol": "udp",
        "FromPort": "6783",
        "ToPort": "6784",
        "SourceSecurityGroupId": {
          "Ref": "KubernetesSG"
        }
      }
    },
    "KubernetesMasterSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Kubernetes Allowed Ports",
        "VpcId": {
          "Ref": "KubernetesVPC"
        }
      }
    },
    "KubernetesIngressAPI": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "KubernetesMasterSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6443",
        "ToPort": "6443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "KubernetesIngressDiscoveryAPI": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "KubernetesMasterSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9898",
        "ToPort": "9898",
        "SourceSecurityGroupId": {
          "Ref": "KubernetesNodeSG"
        }
      }
    },
    "KubernetesMaster": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Ref": "KubeCommunityAMI"
        },
        "InstanceType": {
          "Ref": "MasterInstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "Kubernetes Master - ",
                  {
                    "Ref": "AWS::StackName"
                  }
                ]
              ]
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Ref" : "KubernetesMasterSG"
              },
              {
                "Ref" : "KubernetesSG"
              }
            ],
            "SubnetId": {
              "Ref" : "SubnetAZ1"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash -ex",
                {
                  "Fn::Join": [
                    " ",
                    [
                      "/usr/local/bin/cfn-init",
                      "--verbose",
                      "--stack",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "--region",
                      {
                        "Ref": "AWS::Region"
                      },
                      "--resource",
                      "KubernetesMaster",
                      "--configsets",
                      {
                        "Fn::FindInMap": [
                          "NetworkAddonOptions",
                          {
                            "Ref": "NetworkAddon"
                          },
                          "configSet"
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    " ",
                    [
                      "/usr/local/bin/cfn-signal",
                      "--stack",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "--region",
                      {
                        "Ref": "AWS::Region"
                      },
                      "--resource",
                      "KubernetesMaster"
                    ]
                  ]
                }
              ]
            ]
          }
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "configSets": {
            "config-kubeadm-init-only": [
              "run-kubeadm-init"
            ],
            "config-kubeadm-init-and-weave-network-addon": [
              "run-kubeadm-init",
              "run-weave-network-addon"
            ],
            "default": [
              {
                "ConfigSet": "config-kubeadm-init-and-weave-network-addon"
              }
            ]
          },
          "run-kubeadm-init": {
            "commands": {
              "0-mktoken": {
                "command": {
                  "Fn::Join": [ "", [ "echo \"", { "Ref": "AWS::StackId" }, "\" | shasum | sed 's/^\\([a-z0-9]\\{6\\}\\)\\([a-z0-9]\\{16\\}\\).*/\\1.\\2/' > /tmp/kubeadm_token" ] ]
                }
              },
              "1-kubeadm-init": {
                "command": "set -x; kubeadm init --api-advertise-addresses=\"$(ec2metadata --public-ipv4)\" --token=\"$(cat /tmp/kubeadm_token)\" --use-kubernetes-version=\"$(cat /etc/kubernetes_community_ami_version)\""
              },
              "2-rmtoken": {
                "command": "rm /tmp/kubeadm_token"
              },
              "3-copy-kubeconfig": {
                "command": "install --owner=ubuntu --group=ubuntu /etc/kubernetes/admin.conf /home/ubuntu/kubeconfig"
              }
            }
          },
          "run-weave-network-addon": {
            "commands": {
              "0-kubectl-create-network-addon": {
                "command": "kubectl create -f /etc/weave-daemonset.yaml"
              }
            }
          }
        }
      }
    },
    "KubernetesMasterEIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "InstanceId": {
          "Ref": "KubernetesMaster"
        },
        "Domain": "vpc"
      }
    },
    "KubernetesNodeSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Kubernetes Allowed Ports",
        "VpcId": {
          "Ref": "KubernetesVPC"
        }
      }
    },
    "KubernetesIngressNodePortsTCP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "KubernetesNodeSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "30000",
        "ToPort": "32767",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "KubernetesIngressNodePortsUDP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "KubernetesNodeSG"
        },
        "IpProtocol": "udp",
        "FromPort": "30000",
        "ToPort": "32767",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "KubernetesNodeLC": {
      "DependsOn": "KubernetesMaster",
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "KubeCommunityAMI"
        },
        "InstanceType": {
          "Ref": "NodeInstanceType"
        },
        "AssociatePublicIpAddress": true,
        "KeyName": {
          "Ref": "KeyName"
        },
        "SecurityGroups": [
          {
            "Ref": "KubernetesSG"
          },
          {
            "Ref": "KubernetesNodeSG"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash -ex",
                {
                  "Fn::Join": [
                    " ",
                    [
                      "/usr/local/bin/cfn-init",
                      "--verbose",
                      "--stack",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "--region",
                      {
                        "Ref": "AWS::Region"
                      },
                      "--resource",
                      "KubernetesNodeLC"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    " ",
                    [
                      "/usr/local/bin/cfn-signal",
                      "--stack",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "--region",
                      {
                        "Ref": "AWS::Region"
                      },
                      "--resource",
                      "KubernetesNodeASG"
                    ]
                  ]
                }
              ]
            ]
          }
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "commands": {
              "0-mktoken": {
                "command": {
                  "Fn::Join": [ "", [ "echo \"", { "Ref": "AWS::StackId" }, "\" | shasum | sed 's/^\\([a-z0-9]\\{6\\}\\)\\([a-z0-9]\\{16\\}\\).*/\\1.\\2/' > /tmp/kubeadm_token" ] ]
                }
              },
              "1-kubeadm-join": {
                "command": {
                  "Fn::Join": [ " ", [ "kubeadm join --token=\"$(cat /tmp/kubeadm_token)\"", { "Fn::GetAtt": [ "KubernetesMaster", "PrivateIp" ] } ] ]
                }
              },
              "2-rmtoken": {
                "command": "rm /tmp/kubeadm_token"
              }
            }
          }
        }
      }
    },
    "KubernetesNodeASG": {
      "DependsOn": "KubernetesMaster",
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "VPCZoneIdentifier": [
          {
            "Fn::Join": [
              ",",
              [
                {
                  "Ref": "SubnetAZ1"
                }
              ]
            ]
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "KubernetesNodeLC"
        },
        "MinSize": "1",
        "MaxSize": {
          "Ref": "Nodes"
        },
        "DesiredCapacity": {
          "Ref": "Nodes"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "Kubernetes Node - ",
                  {
                    "Ref": "AWS::StackName"
                  }
                ]
              ]
            },
            "PropagateAtLaunch": "true"
          }
        ]
      }
    }
  },
  "Outputs": {
    "MasterIP": {
      "Value": {
        "Fn::GetAtt": [
          "KubernetesMaster",
          "PublicIp"
        ]
      }
    },
    "LoginToMasterCommand": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "ssh -i ",
            {
              "Ref": "KeyName"
            },
            ".pem ubuntu@",
            {
              "Fn::GetAtt": [
                "KubernetesMaster",
                "PublicIp"
              ]
            }
          ]
        ]
      }
    },
    "GetKubeconfigCommand": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "scp -i ",
            {
              "Ref": "KeyName"
            },
            ".pem ubuntu@",
            {
              "Fn::GetAtt": [
                "KubernetesMaster",
                "PublicIp"
              ]
            },
            ":kubeconfig ./kubeconfig"
          ]
        ]
      }
    }
  }
}
